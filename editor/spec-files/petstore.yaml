# this is a work-in-progress and has errors
swagger: 2.0
info:
  title: Petstore Sample API
  description: A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification
  version: "1.0.0"
  termsOfService: Do whatever you want with this
  contact:
    name: Wordnik API Team
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: petstore.swagger.wordnik.com
basePath: /api
consumes:
  - application/json
paths:
  /user/createWithList:
    post:
      parameters:
        - name: body
          in: body
          description: List of user object
          required: false
  /pet:
    get:
      description: Just to test all response codes
      parameters:
        - name: X-Custom-Header
          in: header
          description: to test header parameter
          required: false
      responses:
        "200":
          description: to test 200
        "400":
          description: to test 400
        "300":
          description: to test 300
        "500":
          description: to test 400
        default:
          description: to test default
    put:
      parameters:
        - name: body
          in: body
          description: Pet object that needs to be added to the store
          required: false
          schema:
            $ref: Pet
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Pet not found
        "405":
          description: Validation exception
    post:
      parameters:
        - name: body
          in: body
          description: Pet object that needs to be added to the store
          required: false
          schema:
            $ref: Pet
      responses:
        "405":
          description: Invalid input
  /store/order/{orderId}:
    get:
      parameters:
        - name: orderId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          type: string
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Order not found
    delete:
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          type: string
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Order not found
  /user/createWithArray:
    post:
      parameters:
        - name: body
          in: body
          description: List of user object
          required: false
  /store/order:
    post:
      parameters:
        - name: body
          in: body
          description: order placed for purchasing the pet
          required: false
          schema:
            $ref: Order
      responses:
        "400":
          description: Invalid Order
  /pet/findByStatus:
    get:
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: false
          type: string
      responses:
        "400":
          description: Invalid status value
  /user/{username}:
    get:
      parameters:
        - name: username
          in: path
          description: The name that needs to be fetched. Use user1 for testing.
          required: true
          type: string
      responses:
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
    put:
      parameters:
        - name: username
          in: path
          description: name that need to be deleted
          required: true
          type: string
        - name: body
          in: body
          description: Updated user object
          required: false
          schema:
            $ref: User
      responses:
        "400":
          description: Invalid user supplied
        "404":
          description: User not found
    delete:
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
  /pet/findByTags:
    get:
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: false
          type: string
      responses:
        "400":
          description: Invalid tag value
  /user:
    post:
      parameters:
        - name: body
          in: body
          description: Created user object
          required: false
          schema:
            $ref: User
  /user/logout:
    get:
      responses:
        -
          "200":
            description: Logs you out
  /user/login:
    get:
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          type: string
      responses:
        "400":
          description: Invalid username/password supplied
  /pet/{petId}:
    get:
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          type: string
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Pet not found
definitions:
  User:
    properties:
      id:
        type: integer
        format: int32
      lastName:
        type: string
      username:
        type: string
      phone:
        type: string
      email:
        type: string
      userStatus:
        type: integer
        format: int32
      firstName:
        type: string
      password:
        type: string
  Pet:
    properties:
      id:
        type: integer
        format: int32
      tags:
        type: array
        items:
          $ref: Tag
      category:
        $ref: Category
      status:
        type: string
      name:
        type: string
      photoUrls:
        type: array
        items:
          type: string
  Order:
    properties:
      id:
        type: integer
        format: int32
      petId:
        type: integer
        format: int32
      status:
        type: string
      complete:
        type: boolean
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
  Tag:
    properties:
      id:
        type: string
        format: in32
  Category:
    properties:
      id:
        type: string
        format: in32
